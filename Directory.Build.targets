
<Project>

  <Target Name="ReIncludeCompilationItems">
    <ItemGroup>
      <!-- 
        https://stackoverflow.com/a/44829863/9731532 
        This approach must be slower than just including single files tho.
        -->
      <Compile Include="**/*$(DefaultLanguageSourceExtension)"
               Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);$(BaseIntermediateOutputPath)**;$(BaseOutputPath)**;@(Compile)" />
    </ItemGroup>
  </Target>

  <Target Name="IncludeKariGeneratedCompilationItems_Default">
      <!-- 
        It could be good to generate the files into the obj folder. 
        Shouldn't be hard.

        Currently, I assume the default generated directory.
        -->
    <ItemGroup>
      <Compile Include="Generated/**/*$(DefaultLanguageSourceExtension)" 
               KeepDuplicates="false" />
    </ItemGroup>
  </Target>
  
  <ItemGroup Condition=" '@(TestedPlugins)' != '' ">
    <ProjectReference Include="@(TestedPlugins -> '%(FullPath)')"
                      ReferenceOutputAssembly="false"
                      ExcludeAssets="runtime" 
                      PrivateAssets="all" />
    
    <!-- This does not actually force it to recompile for some reason?? -->
    <ProjectReference Include="$(KariRootPath)Kari.Generator\Kari.Generator.csproj"/>
  </ItemGroup>

  <Target Name="LauchKariForTestedPlugins" 
          AfterTargets="ResolveProjectReferences"
          Condition=" '@(TestedPlugins)' != '' ">

    <PropertyGroup> 
      <KariCommand>$(KariExecutablePath) -pluginPaths &quot;@(TestedPlugins -> '$(KariOutputPath)%(Filename)\$(Configuration)\$(TargetFramework)\Kari.Plugins.%(Filename).dll', ',')&quot;</KariCommand>
    </PropertyGroup> 

    <Message Importance="high" Text="$(KariCommand)"/>
    <Exec Command="$(KariCommand)" 
          WorkingDirectory="$(MSBuildProjectDirectory)" />
    <CallTarget Targets="IncludeKariGeneratedCompilationItems_Default" />
  </Target>

</Project>
