<Project>
  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <OutputType>Library</OutputType>
    <DummyAnnotationsTemplatePath>$(KariRootPath)Kari.Plugins\DummyAnnotations.tt</DummyAnnotationsTemplatePath>
    <!-- RS1024 is Compare Symbols correctly, making me use `SymbolComparison.Default.Equals()` instead of `==` -->
    <NoWarn>$(NoWarn);RS1024</NoWarn>
  </PropertyGroup>
  
  <ItemGroup>
    <!-- Roslyn references. -->
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="3.10.0" />
    <PackageReference Include="Microsoft.Build" Version="16.5.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="$(KariRootPath)Kari.GeneratorCore\Kari.GeneratorCore.csproj" />
  </ItemGroup>

  <ItemGroup>
    <!-- The T4 reference. See this awesome sample https://github.com/nogic1008/T4Sample    -->
    <!-- The actual T4 implementation here https://github.com/mono/t4                       -->
    <!-- It is way easier to use than the built-in implementation in provided by MS via VS. -->
    <PackageReference Include="Mono.TextTemplating" Version="2.2.1" />

    <!-- These just define VARIABLES, used below for the transform `target` -->
    <TextTemplates Include="**\*Template.tt" />
    <Generated Include="**\*.Generated.cs" />
  </ItemGroup>

  <Target Name="TextTemplateTransform" BeforeTargets="BeforeBuild">

    <!-- %(Whatever) does iteration over the given 'Glob', representing an individual element of the sequence. -->
    <!-- TODO: $(AssemblyName) thing is kind of annoying. Pull the name from the directory somehow -->
    <Exec Condition="@(TextTemplates) != ''" Command="dotnet t4 %(TextTemplates.Identity) -class $(AssemblyName).%(TextTemplates.Filename) -out %(TextTemplates.RecursiveDir)%(TextTemplates.Filename).Generated.cs" />

    <!-- There is no -class option, because this is a design time template, I think it is called. -->
    <!-- -p: passes variables to the template. -->
    <Exec Command="dotnet run --project $(KariRootPath)Kari.Annotator\Kari.Annotator.csproj --no-restore"/>
    
  </Target>

  <Target Name="TextTemplateClean" AfterTargets="Clean">
    <Delete Files="@(Generated)" />
  </Target>
</Project>