<#@ template debug="false" hostspecific="false" linePragmas="false" language="C#" inherits="CodePrinterBase" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#@ include file="Snippets/header.txt" #>

namespace <#= Namespace #>
{
    using <#= DefinitionsNamespace #>;

    public static partial class Parsers
    {
<#  } 
    foreach (var func in _customParserFunctionInfos)
    { 
        string parserName = func.Name + "Parser"; #>
        public class <#= parserName #> : IValueParser<<#= func.TypeName #>>
        {
            public ParseSummary Parse(string input, out <#= func.TypeName #> value) => <#= func.FullyQualifiedName #>(input, out value);
        }
        public static readonly <#= parserName #> <#= func.Name #> = new <#= parserName #>();
<#  } 
    foreach (var parser in _customParserInfos)
    { #>
        public static readonly <#= parser.FullyQualifiedName #> <#= parser.Name #> = new <#= parser.FullyQualifiedName #>();
<#  } #>
    }
}

<#@ include file="Snippets/footer.txt" #>